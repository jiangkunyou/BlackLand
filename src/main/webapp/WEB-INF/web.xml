<?xml version="1.0" encoding="UTF-8" ?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
             http://java.sun.com/xml/ns/j2ee  http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd
         ">

    <!-- 初始化日志系统 -->
    <listener>
        <listener-class>com.alibaba.citrus.logconfig.LogConfiguratorListener</listener-class>
    </listener>

    <!-- 装载/WEB-INF/webx.xml, /WEB-INF/webx-*.xml -->
    <listener>
        <listener-class>com.alibaba.citrus.webx.context.WebxContextLoaderListener</listener-class>
    </listener>
    
    <!-- 自定义的listener 初始化配置 -->
    <!--<listener>-->
        <!--<listener-class>com.dlut.jky.app1.listeners.MyListener</listener-class>-->
    <!--</listener>-->

    <filter>
        <filter-name>mdc</filter-name>
        <filter-class>com.alibaba.citrus.webx.servlet.SetLoggingContextFilter</filter-class>
    </filter>

    <filter>
        <filter-name>webx</filter-name>
        <filter-class>com.alibaba.citrus.webx.servlet.WebxFrameworkFilter</filter-class>
        <init-param>
            <param-name>excludes</param-name>
            <param-value><!-- 需要被“排除”的URL路径，以逗号分隔，如/static, *.jpg。适合于映射静态页面、图片。 --></param-value>
        </init-param>
        <init-param>
            <param-name>passthru</param-name>
            <param-value><!-- 需要被“略过”的URL路径，以逗号分隔，如/myservlet, *.jsp。适用于映射servlet、filter。
                对于passthru请求，webx的request-contexts服务、错误处理、开发模式等服务仍然可用。 --></param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>mdc</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>webx</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <welcome-file-list>
        <welcome-file>login.vm</welcome-file>
        <!--<welcome-file>login.jsp</welcome-file>-->
    </welcome-file-list>

    <!-- 学习javaweb -->
    <!-- 配置servletContext参数 可以被任何servlet访问 相当于全局变量-->
    <context-param>
        <param-name>driver</param-name>
        <param-value>com.mysql.jdbc.Driver</param-value>
    </context-param>

     <!-- 绑定connection -->
    <!--<filter>-->
        <!--<filter-name>connectionBindFilter</filter-name>-->
        <!--<filter-class>com.dlut.jky.app1.filters.ConnectionBindFilter</filter-class>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
        <!--<filter-name>connectionBindFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <servlet>
        <servlet-name>myServlet</servlet-name>
        <servlet-class>com.dlut.jky.app1.servlets.MyServlet</servlet-class>
        <!-- 配置init中的servletConfig 这里的参数只能被当前这个myServlet获取，相当于局部变量  -->
        <init-param>
            <param-name>user</param-name>
            <param-value>root</param-value>
        </init-param>
        <init-param>
            <param-name>password</param-name>
            <param-value>root</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>myServlet</servlet-name>
        <url-pattern>/myservlet</url-pattern>
    </servlet-mapping>

    <!-- 放到web-inf中是为了不能单独访问该页面，只能通过转发访问 -->
    <error-page>
        <error-code>404</error-code>
        <location>/common/templates/screen/404.vm</location>
    </error-page>

    <!-- web应用初始化时候就加载该servlet, load-on-startup中的数字代表加载优先级，数组越小优先级越大-->
    <!--<servlet>-->
        <!--<servlet-name>initServlet</servlet-name>-->
        <!--<servlet-class>com.dlut.jky.app1.servlets.InitServlet</servlet-class>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->


</web-app>
